{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Usuários e Tarefas",
    "version": "1.0.0",
    "description": "Uma API simples para gerenciar usuários e suas tarefas, com autenticação JWT."
  },
  "tags": [
    {
      "name": "Users",
      "description": "Operações relacionadas a usuários"
    },
    {
      "name": "Tasks",
      "description": "Operações relacionadas a tarefas"
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "summary": "Cria um novo usuário",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "E-mail já está em uso."
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Autentica um usuário e retorna um token JWT",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido."
          },
          "401": {
            "description": "Credenciais inválidas."
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "summary": "Retorna o perfil do usuário autenticado",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Perfil do usuário.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Token não fornecido ou inválido."
          }
        }
      }
    },
    "/api/users/me": {
      "put": {
        "summary": "Atualiza o nome e o e-mail do usuário autenticado",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "409": {
            "description": "O novo e-mail já está em uso."
          }
        }
      },
      "delete": {
        "summary": "Deleta a conta do usuário autenticado",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Usuário deletado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          }
        }
      }
    },
    "/api/users/me/password": {
      "put": {
        "summary": "Altera a senha do usuário autenticado",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Senha alterada com sucesso."
          },
          "401": {
            "description": "Senha antiga incorreta."
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "summary": "Cria uma nova tarefa para o usuário autenticado",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tarefa criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado."
          }
        }
      },
      "get": {
        "summary": "Lista todas as tarefas do usuário autenticado com filtros e paginação",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["HIGH", "MEDIUM", "LOW"]
            },
            "description": "Filtrar por prioridade"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "COMPLETED",
                "STARTED",
                "BLOCKED",
                "NOSTARTED"
              ]
            },
            "description": "Filtrar por status"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Número da página"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Quantidade de itens por página"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tarefas paginada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTasks"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado."
          }
        }
      }
    },
    "/api/task/{id}": {
      "get": {
        "summary": "Busca uma tarefa específica por ID",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da tarefa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Tarefa não encontrada."
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de uma tarefa",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tarefa atualizada com sucesso."
          },
          "404": {
            "description": "Tarefa não encontrada."
          }
        }
      },
      "delete": {
        "summary": "Deleta uma tarefa",
        "tags": ["Tasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tarefa deletada com sucesso."
          },
          "404": {
            "description": "Tarefa não encontrada."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "name": {
            "type": "string",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "example": "joao@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUserInput": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "example": "joao@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "LoginInput": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "joao@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "UpdateUserInput": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "example": "João da Silva Sauro"
          },
          "email": {
            "type": "string",
            "example": "joao.sauro@example.com"
          }
        }
      },
      "ChangePasswordInput": {
        "type": "object",
        "required": ["oldPassword", "newPassword"],
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "password123"
          },
          "newPassword": {
            "type": "string",
            "example": "newStrongPassword456"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": ["HIGH", "MEDIUM", "LOW"]
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "COMPLETED", "STARTED", "BLOCKED", "NOSTARTED"]
          },
          "user_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateTaskInput": {
        "type": "object",
        "required": ["title", "description", "priority"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Desenvolver nova feature"
          },
          "description": {
            "type": "string",
            "example": "Criar a funcionalidade de exportar relatórios."
          },
          "priority": {
            "type": "string",
            "enum": ["HIGH", "MEDIUM", "LOW"],
            "example": "HIGH"
          }
        }
      },
      "UpdateTaskInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": ["HIGH", "MEDIUM", "LOW"]
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "COMPLETED", "STARTED", "BLOCKED", "NOSTARTED"]
          }
        }
      },
      "PaginatedTasks": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "integer"
              },
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "totalPages": {
                "type": "integer"
              }
            }
          }
        }
      }
    }
  }
}
